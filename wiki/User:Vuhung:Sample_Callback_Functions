<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <title>Tokyo Linux Users Group</title>
    <link rel="stylesheet" href="css/tlug4.css" type="text/css" />
  </head>

  <body>
    <div id="top">
      <div id="sponsor">
        <p>Hosted by <a href="http://asahi-net.jp/en/">ASAHI Net</a>, provider of mobile and fixed broadband <br/>Internet services to individuals and corporations.
        </p>
      </div>

      <div id="lang_options">
        <p>| English | <a href="/index.html.ja">日本語</a> |</p>
      </div>

      <div id="logo">
        <a href="/"><img src="images/shirt200.png" alt="logo" /></a>
      </div>

      <h1 id="header">
        Tokyo Linux Users Group
      </h1>
    </div>

    <div id="menu">
      <div class="search">
        <!-- Google CSE Search Box Begins -->
        <img src="http://www.google.com/coop/images/google_custom_search_smwide.gif" alt="Google Custom Search" />
        <form id="searchbox_012202592177554568923:r_bafg63erq" action="http://www.google.com/cse" name="searchbox_012202592177554568923:r_bafg63erq">
        <input type="hidden" name="cx" value="012202592177554568923:r_bafg63erq" />
        <input type="hidden" name="cof" value="FORID:0" />
        <input type="text" size="25" name="q" />
        <input id="searchgo" type="submit" value="Go" />
        </form>
        <!-- Google CSE Search Box Ends -->
      </div>

      <div class="items">
      </div>
    </div>

    <div class="content">
      <pre><code>#include &lt;iostream&gt;

class AClass
{
   public:

    void method1()
    {
       std::cout &lt;&lt; &quot;Method 1&quot; &lt;&lt; std::endl;
    };

    void method2()
    {
       std::cout &lt;&lt; &quot;Method 2&quot; &lt;&lt; std::endl;
    };
};


int main()
{
   AClass  inst1;
   AClass* inst2;

   void (AClass::*Method)(void);

   inst2 = new AClass;
   Method = &amp;AClass::method1;
   (inst1.*Method)();

   Method = &amp;AClass::method2;
   (inst2-&gt;*Method)();
   delete inst2;
}</code></pre>
<p>Output:</p>
<pre><code>[vuhung@teriyaki SimpleCallBackExamples]$./example0
Method 1
Method 2</code></pre>
<pre><code>#include &lt;iostream&gt;

class AClass
{
   public:

    void method1(unsigned int value)
    {
       std::cout &lt;&lt; &quot;Method 1 - Value: &quot; &lt;&lt; value &lt;&lt; std::endl;
    };

    bool method2(unsigned int value)
    {
       std::cout &lt;&lt; &quot;Method 2 - Value: &quot; &lt;&lt; value &lt;&lt; std::endl;
       return true;
    };

};

int main()
{
   AClass instance;

   void (AClass::*MethodType1)(unsigned int);
   bool (AClass::*MethodType2)(unsigned int);

   MethodType1 = &amp;AClass::method1;
   MethodType2 = &amp;AClass::method2;

   (instance.*MethodType1)(123);

   if ((instance.*MethodType2)(456))
     std::cout &lt;&lt; &quot;Method returned a TRUE result.&quot; &lt;&lt; std::endl;
   else
     std::cout &lt;&lt; &quot;Method returned a FALSE result.&quot; &lt;&lt; std::endl;

   return true;
}</code></pre>
<p>Output:</p>
<pre><code>[vuhung@teriyaki SimpleCallBackExamples]$./example1
Method 1 - Value: 123
Method 2 - Value: 456
Method returned a TRUE result</code></pre>
<pre><code>#include &lt;iostream&gt;

template &lt;typename AType&gt;
class AClass
{

   public:
    AClass(AType _data)
    {
       data = _data;
    };

    AType operator()()
    {
       std::cout &lt;&lt; data &lt;&lt; std::endl;
       return data;
    };

   private:

    AType data;
};


int main()
{
   int    (AClass&lt; int &gt;::*int_method)();
   double (AClass&lt; double &gt;::*double_method)();

   AClass &lt; int &gt; instance1(123);
   AClass &lt; double &gt; instance2(456.789);

   int_method = &amp;AClass&lt; int &gt;::operator();
   double_method = &amp;AClass&lt; double &gt;::operator();

   (instance1.*int_method)();
   (instance2.*double_method)();

   return true;
}</code></pre>
<p>Output:</p>
<pre><code>[vuhung@teriyaki SimpleCallBackExamples]$./example2
123
456.789</code></pre>
    </div>

    <div id="footer">
      <div id="sponsor">
        <p>The TLUG web page is hosted by the award-winning Internet provider <a href="http://asahi-net.jp/en/">ASAHI Net.</a></p>
        <p><a href="http://tlug.jp/wiki/TLUG_Archvie_Server">TLUG's archive server</a> is hosted by <a href="http://www.networld.ne.jp">K.K. NETWORLD</a></p>
      </div>

      <div id="copyright">
        <p>Homepage of the Tokyo Linux Users Group. All rights reserved.<br />
        Established June 16, 1994</p>
      </div>
    </div>

    <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
      var pageTracker = _gat._getTracker("UA-5555263-2");
      pageTracker._trackPageview();
    </script>
  </body>
</html>
