== Filenames ==

=== Hidden Files ===

Q. How do you "hide" a file or directory?

Name the file with a <tt>.</tt> at the beginning:

 $ touch .hidden

Q: How do you list such files/directories?

Use the <tt>-a</tt> option:

 $ ls -a

; Contributor(s)
: [[User:Travis|Travis]]

=== Dash Files ===

Q: How can you remove a file named <tt>-r</tt>?

Use <tt>--</tt> to tell commands where options end:

 $ touch -- -r
 $ rm -- -r
 $ rm ./-r

; Contributor(s)
: [[User:Bruno|Bruno]]
: [[User:Mattia|Mattia]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Glob Files ===

Q: How can you remove a file named <tt>*</tt> or <tt>?</tt>

Use backslashes to escape such characters:

 $ touch \* \?
 $ rm \* \?
 $ rm '*' '?'

; Contributor(s)
: [[User:Daniel|Daniel]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Globs ===

Q: How can <tt>.??*</tt> be useful?

It displays hidden files with at least two characters after the dot:

<code>
 $ touch .1 .un .deux .trois
 $ echo .*
 .  ..  .1 .deux  .trois  .un
 $ echo .?*
 .. .1 .deux  .trois  .un
 $ echo .??*
 .deux  .trois  .un
</code>

; Contributor(s)
: [[User:Bruno|Bruno]]

; Quiz(es)
: [[Meetings:2014:05]]

== Permissions ==

=== -rwxrwxrwx ===

Q: How can you find all world-writable files/directories in <tt>$HOME</tt>?

<tt>find</tt> is used for recursion:

 $ find $HOME -perm -2 ! -type l -ls

Q: How can you fix the permissions for all files found?

Use <tt>-exec chmod</tt>:

 $ find $HOME -perm -2 ! -type l -exec chmod o-w {} +
 $ find $HOME -perm -2 ! -type l -exec chmod o-w {} \;

What is the difference between "<tt>+</tt>" and "<tt>\;</tt>" notations? Why would you choose one over the other?

; Contributor(s)
: [[User:Travis|Travis]]
: [[User:Bruno|Bruno]]

; Quiz(es)
: [[Meetings:2014:05]]

=== -rwsr-x--- ===

Q: What do permissions <tt>-rwsr-x---</tt> signify?

* SETUID
* When users in the group execute the file, it executes as the file owner.
* <tt>chmod 4750 file</tt>

Q: When would permissions like this be useful?

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== -rwxr-sr-x ===

Q: What do permissions <tt>-rwxr-sr-x</tt> signify?

* SETGID
* When users execute the file, it executes as the file group.
* <tt>chmod 2755 file</tt>

Q: When would permissions like this be useful?

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== drwxrwsr-x ===

Q: What do permissions <tt>drwxrwsr-x</tt> signify?

* SETGID
* When files/directories are created in this directory, they are assigned the same group, not the user's default group.
* <tt>chmod 2775 directory</tt>

Q: When would permissions like this be useful?

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== drwxrwxrwt ===

Q: What do permissions <tt>drwxrwxrwt</tt> signify?

* ''sticky bit''
* When files/directories are created in this directory, they can only be unlinked by the owner or root.
* <tt>chmod 1777 directory</tt>

Q: When would permissions like this be useful?

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== /etc/hostname ===

Q: How can you update <tt>/etc/hostname</tt> as a non-root user?

 $ ls -l /etc/hostname
 -rw-r--r-- 1 root root ... /etc/hostname
 $ cat /etc/hostname
 changeme

Use <tt>sudo tee</tt>:

 $ echo tlug | sudo tee /etc/hostname

Alternatively:

 $ sudo bash -c 'echo tlug > /etc/hostname'

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

== Filesystem ==

=== rm ===

Q: How and when could <tt>rm</tt> not free disk space?

* Files are reference-counted.
* Disk space is not freed by <tt>rm</tt> if the file is in use by a process.
* The space should be freed when the process finishes.

; Contributor(s)
: [[User:Bruno|Bruno]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Links ===

Q: What is the difference between <tt>ln</tt> and <tt>ln -s</tt>?

* By default, <tt>ln</tt> creates ''hard'' links:
** Links to inodes on the same filesystem
* With <tt>-s</tt>, <tt>ln</tt> creates ''symbolic'' links:
** Links can hold arbitrary text
** Links are resolved when referenced

Q: When would you use each type of link?

; Contributor(s)
: [[User:Bruno|Bruno]]

; Quiz(es)
: [[Meetings:2014:05]]

== Pipes ==

=== Standard IO ===

Q: How can you run a program and not display <tt>STDERR</tt> (bash)?

Redirect <tt>STDERR</tt> to <tt>/dev/null</tt>:

 $ somejavaprogram 2> /dev/null

Q: How can you redirect both <tt>STDOUT</tt> and <tt>STDERR</tt> to a file?

 $ somejavaprogram > file.log 2>&1

Q: What are doing exactly the following lines?

 TMPFILE=/tmp/$$-test
 exec 3>&1 >${TMPFILE}
 echo ichi
 exec 1>&3 3>&-
 echo ni
 cat ${TMPFILE}

; Contributor(s)
: [[User:Travis|Travis]]
: [[User:Bruno|Bruno]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Named Pipes ===

Q: How do you create a named pipe?

 $ mkfifo tlug
 $ ls -l tlug
 prw-r--r-- 1 tokyo tokyo 0 May 10 15:00 tlug

Q: How do you use named pipes?

Treat them like files.  On the command line, use redirection:

 one$ echo 'Hello, TLUG!' > tlug
 two$ cat < tlug

Nothing is written to disk!

Q: Why use named pipes?

* Fast inter-process communication (IPC)
* Use more than one pipe without using temporary files

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

== Processes ==

=== Slow System ===

Q: How can you determine which program is slowing down your system?

* Use <tt>top</tt> to locate processes with high CPU/memory usage.
* Use <tt>iotop</tt> to locate processes with high disk usage.

Q: How can you terminate it?

 $ kill $PID  # sends TERM signal to $PID

Q: What if that doesn't work?

 $ kill -9 $PID  # sends KILL signal to $PID

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Unmount Fail ===

Q: If you try to unmount a filesystem and get an error about open files,
how can you solve the problem?

Use <tt>lsof</tt> to show which processes access a directory/file:

 $ lsof /mnt/stick

Use <tt>fuser</tt> to show which processes use the filesystem:

 $ fuser -v -m /mnt/stick

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

=== Processes/Zombies ===

Q: What is a process? How do you create one? What is the relationship between a child process and a parent process?

Q: Who is the ancestor of all processes on your system? How could it be "alive" itself?

Q: What is a ''zombie'' process?

* When a process exits, its process descriptor stays in memory until its parent process calls <tt>wait()</tt>, which deletes it.  A process in this state is a ''zombie'' process.

Q: Why are they bad?

* A process descriptor takes a negligible amount of memory.
* The zombie takes up a process ID (PID).

Q: How do you get rid of one?

Send a <tt>SIGCHLD</tt> signal to the parent process:

 $ kill -s SIGCHLD $PID

If that does not work, the parent process must be killed.

; Contributor(s)
: [[User:Travis|Travis]]
: [[User:Bruno|Bruno]]

=== Substitution ===

Q: What does the following do (bash)?

 $ program --in1 <(makein in1.txt) \
 --in2 <(makein in2.txt) \
 --out1 out1.txt --out2 out2.txt \
 > stdout.txt 2> stderr.txt

* <tt><()</tt> runs a process and substitutes a dynamically-assigned file descriptor.
* The <tt><()</tt> commands are run in parallel, managed by the OS.

; Contributor(s)
: [[User:Travis|Travis]]

; Quiz(es)
: [[Meetings:2014:05]]

; Reference(s)
: http://vincebuffalo.org/2013/08/08/the-mighty-named-pipe.html

== Network ==

=== Infiltrated ===

Q: How can you determine which program is making your fiber-modem blink?

<tt>lsof</tt> is useful for listing network connections as well:

 $ lsof -i

<tt>netstat</tt> is also a useful utility:

 $ netstat -pt

; Contributor(s)
: [[User:Travis|Travis]]

; Reference(s)
: http://www.danielmiessler.com/study/lsof/

=== Ding ===

Q: If your terminal bell works, what standard utilities can you use to get an alert when somebody visits your website?

<tt>tail -f</tt> ''follows'' files, and <tt>sed</tt> can insert a <tt>BEL</tt>:

 $ tail -f /var/log/nginx/site.access.log \
 | sed 's/^/\a/'

; Contributor(s)
: [[User:Travis|Travis]]
