#!/usr/bin/env bash
set -e -o pipefail
trap 'x=$?; echo 1>&2 "FAILED ($x)."; exit $x' 0

relbranch=gh-pages

die() { local exitcode="$1"; shift; echo 1>&2 "$@"; trap '' 0; exit $exitcode; }

#   Install Haskell Stack if necessary and ensure it's in $PATH.
install_stack() {
    stackbin=~/.local/bin
    mkdir -p "$stackbin"
    export PATH=~/.local/bin:$PATH
    stack --version 2>/dev/null || {
        echo "Installing stack to $stackbin/"
        echo "This may need to sudo to install additional OS packages."
        curl -sSL https://get.haskellstack.org/ | sh -s - -d "$stackbin"
    }
}

setup_sastack() {
    local sastack="$basedir/_sastack/"
    local sabin="$sastack/.local/bin"
    #   If this doesn't already exist, our pre-built Stack
    #   is not installed correctly.
    [[ -x $sabin/stack ]] \
        || die 1 "Stand-alone _sastack/ not availble or incorrectly built"
    export STACK_ROOT="$sastack/.stack"
    export PATH="$sabin:$PATH"
}

commit_release_branch=false
while true; do case "$1" in
    --branch-release)   shift; commit_release_branch=true;;
    --netlify-test)     shift; export NETLIFY_IMAGES_CDN_DOMAIN=1;;
    -*)                 die 2 "Error: unknown option: '$1'";;
    *)                  break;;
esac; done
[[ ${#@} -eq 0 ]] || die 2 "Error: extra arguments:" "$@"

basedir=$(cd "$(dirname "$0")" && pwd -P)
cd "$basedir"

if [[ -n $NETLIFY_IMAGES_CDN_DOMAIN ]]; then
    setup_sastack   # We're building on Netlify; use pre-built Stack/Hakyll
else
    install_stack
fi
stack upgrade
stack build
stack exec site build

$commit_release_branch && {
    echo "Committing built site in _site/ to $relbranch"
    bin/git-commit-filetree "$relbranch" _site/
}

trap '' 0
